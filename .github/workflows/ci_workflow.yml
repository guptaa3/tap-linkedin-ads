### A CI workflow template that runs linting and python testing
### TODO: Modify as needed or as desired.

name: Test tap-linkedin

on: [push]

jobs:
  linting:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.2
    - name: Install dependencies
      run: |
        poetry install
    - name: Run lint command from tox.ini
      run: |
        poetry run tox -e lint

  pytest:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.2
    - name: Install dependencies
      run: |
        poetry install
    - name: Test with pytest
      id: test_pytest
      continue-on-error: false
      env:
         TAP_LINKEDIN_ADS_ACCESS_TOKEN: ${{ secrets.access_token }}
         TAP_LINKEDIN_ADS_ACCOUNTS: ${{ secrets.accounts }}
         TAP_LINKEDIN_ADS_REFRESH_TOKEN: ${{ secrets.refresh_token }}
         TAP_LINKEDIN_ADS_CLIENT_ID: ${{ secrets.client_id }}
         TAP_LINKEDIN_ADS_CLIENT_SECRET: ${{ secrets.client_secret }}
         TAP_LINKEDIN_ADS_OWNER: ${{ secrets.owner }}
         TAP_LINKEDIN_ADS_CAMPAIGN: ${{ secrets.campaign }}
      run: |
        poetry run pytest --capture=no
